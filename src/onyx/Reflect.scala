package onyx
import java.lang.reflect.Field
import java.net.URLClassLoader

class Hook(
	val name: String,
	val id: String,
	val field: Field,
	val mult: Int		){

	def get: Object = get(null)
	def get(obj: Object): Object =
		field.get(obj)

	def getInt: Int = getInt(null)
	def getInt(obj: Object): Int =
		field.get(obj).asInstanceOf[Int] * mult

	def set(value: Any, instance: Any = null) =
		field.set(instance, value)

	override def toString = field.toString
}

object Reflect {

	val NODE_PREVIOUS,
	NODE_NEXT,
	NODE_UID,
	HASHTABLE_BUCKETS,
	HASHTABLE_SIZE,
	LINKEDLIST_TAIL,
	LINKEDLIST_HEAD,
	SCRIPTEVENT_ARGS,
	SCRIPTEVENT_NAME,
	RENDERABLE_MODELHEIGHT,
	MODEL_VERTICESX,
	MODEL_VERTICESY,
	MODEL_VERTICESZ,
	MODEL_INDICESX,
	MODEL_INDICESY,
	MODEL_INDICESZ,
	REGION_TILES,
	REGION_INTERACTABLES,
	BOUNDARY_FLAGS,
	BOUNDARY_X,
	BOUNDARY_Y,
	BOUNDARY_PLANE,
	BOUNDARY_RENDERABLE,
	BOUNDARY_ORIENTATION,
	BOUNDARY_ID,
	OBJECTDEF_NAME,
	OBJECTDEF_ACTIONS,
	OBJECTDEF_COLORS,
	ENTITY_RENDERABLE,
	ENTITY_ID,
	ENTITY_X,
	ENTITY_WORLDY,
	ENTITY_HEIGHT,
	ENTITY_ORIENTATION,
	ENTITY_Y,
	ENTITY_OFFSETX,
	ENTITY_OFFSETY,
	ENTITY_PLANE,
	ENTITY_FLAGS,
	ENTITY_WORLDX,
	TILEDECORATION_RENDERABLE,
	TILEDECORATION_PLANE,
	TILEDECORATION_X,
	TILEDECORATION_ID,
	TILEDECORATION_FLAGS,
	TILEDECORATION_Y,
	BOUNDARYDECORATION_FLAGS,
	BOUNDARYDECORATION_X,
	BOUNDARYDECORATION_PLANE,
	BOUNDARYDECORATION_RENDERABLE,
	BOUNDARYDECORATION_ORIENTATION,
	BOUNDARYDECORATION_ID,
	BOUNDARYDECORATION_Y,
	GROUNDITEMPILE_PLANE,
	GROUNDITEMPILE_ID,
	GROUNDITEMPILE_X,
	GROUNDITEMPILE_Y,
	GROUNDITEMPILE_HEIGHT,
	GROUNDITEM_ID,
	GROUNDITEM_QUANTITY,
	TILE_BOUNDARY,
	TILE_ENTITIES,
	TILE_DECORATION,
	TILE_BOUNDARYDECORATION,
	TILE_GROUNDITEMPILE,
	CHARACTER_SPOKENTEXT,
	CHARACTER_COMBATCYCLE,
	CHARACTER_QUEUESIZE,
	CHARACTER_HEALTH,
	CHARACTER_MAXHEALTH,
	CHARACTER_INTERACTIONINDEX,
	CHARACTER_ORIENTATION,
	CHARACTER_ANIMATION,
	CHARACTER_X,
	CHARACTER_Y,
	CHARACTER_PATHX,
	CHARACTER_PATHY,
	PLAYERDEF_FEMALE,
	PLAYER_DEFINITION,
	PLAYER_NAME,
	PLAYER_COMBATLEVEL,
	NPCDEF_NAME,
	NPCDEF_ACTIONS,
	NPCDEF_ID,
	NPCDEF_COMBATLEVEL,
	NPC_DEFINITION,
	ITEMDEF_GROUNDACTIONS,
	ITEMDEF_ACTIONS,
	ITEMDEF_ID,
	ITEMDEF_NAME,
	WIDGET_PARENT,
	WIDGET_CHILDREN,
	WIDGET_ITEMIDS,
	WIDGET_QUANTITIES,
	WIDGET_TEXTCOLOR,
	WIDGET_TEXTALPHA,
	WIDGET_TEXTUREID,
	WIDGET_FONTID,
	WIDGET_BORDERTHICKNESS,
	WIDGET_SHADOWCOLOR,
	WIDGET_VERTICALFLIP,
	WIDGET_HORIZONTALFLIP,
	WIDGET_ID,
	WIDGET_SELECTEDACTION,
	WIDGET_X,
	WIDGET_Y,
	WIDGET_WIDTH,
	WIDGET_HEIGHT,
	WIDGET_HIDDEN,
	WIDGET_PARENTID,
	WIDGET_INSETX,
	WIDGET_INSETY,
	WIDGET_TEXT,
	WIDGET_SCROLLWIDTH,
	WIDGET_SCROLLHEIGHT,
	WIDGET_ZOOM,
	WIDGET_ROTATIONX,
	WIDGET_ROTATIONY,
	WIDGET_ROTATIONZ,
	WIDGET_ITEMID,
	WIDGET_ITEMQUANTITY,
	WIDGET_INDEX,
	WIDGET_ACTIONS,
	WIDGET_NAME,
	WIDGET_BOUNDSINDEX,
	WIDGET_TYPE,
	WIDGETNODE_ID,
	WORLD_ID,
	WORLD_MASK,
	WORLD_DOMAIN,
	WORLD_ACTIVITY,
	WORLD_LOCATION,
	WORLD_POPULATION,
	COLLISIONMAP_FLAGS,
	CLIENT_LOCALPLAYER,
	CLIENT_LOADEDNPCS,
	CLIENT_LOADEDPLAYERS,
	CLIENT_GROUNDITEMS,
	CLIENT_REGION,
	CLIENT_COLLISIONMAPS,
	CLIENT_CAMERAX,
	CLIENT_CAMERAY,
	CLIENT_CAMERAZ,
	CLIENT_CAMERAYAW,
	CLIENT_CAMERAPITCH,
	CLIENT_CANVAS,
	CLIENT_VALIDWIDGETS,
	CLIENT_WIDGETS,
	CLIENT_WIDGETPOSITIONSX,
	CLIENT_WIDGETPOSITIONSY,
	CLIENT_WIDGETWIDTHS,
	CLIENT_WIDGETHEIGHTS,
	CLIENT_WIDGETNODES,
	CLIENT_TILESETTINGS,
	CLIENT_TILEHEIGHTS,
	CLIENT_GAMESTATE,
	CLIENT_GAMECYCLE,
	CLIENT_VIEWPORTSCALE,
	CLIENT_VIEWPORTHEIGHT,
	CLIENT_VIEWPORTWIDTH,
	CLIENT_MINIMAPSCALE,
	CLIENT_MINIMAPANGLE,
	CLIENT_MINIMAPOFFSET,
	CLIENT_MENUOPEN,
	CLIENT_MENUX,
	CLIENT_MENUY,
	CLIENT_MENUWIDTH,
	CLIENT_MENUHEIGHT,
	CLIENT_MENUACTIONS,
	CLIENT_MENUSIZE,
	CLIENT_MENUOPTIONS,
	CLIENT_ELEVATION,
	CLIENT_BASEX,
	CLIENT_BASEY,
	CLIENT_CONFIGURATIONS,
	CLIENT_LEVELS,
	CLIENT_REALLEVELS,
	CLIENT_EXPERIENCES,
	CLIENT_WORLDCOUNT,
	CLIENT_WORLDS: Hook = null

	def init(hooks: List[Hook]) = {
		for(h <- hooks){
			val f = this.getClass.getDeclaredField(h.name)
			f.setAccessible(true)
			f.set(this, h)
			println(h.name.padTo(40, ' ') + h)
		}
	}
}

